import React, { useState } from 'react';
import axios from "axios";

const Registro = ({ isOpen, onClose }) => {
  const [datos, setDatos] = useState({
    username: "",
    password: "",
    email: ""
  });

  const [error, setError] = useState('');
  const [isLogin, setIsLogin] = useState(true);
  const [success, setSuccess] = useState('');

  const handleInputChange = (e) => {
    let { name, value } = e.target;
    let newDatos = { ...datos, [name]: value };
    setDatos(newDatos);
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!e.target.checkValidity()) {
      console.log("no enviar");
    } else {
      try {
        let res;
        if (isLogin) {
          res = await axios.post("http://localhost:8000/users/login", datos);
        } else {
          res = await axios.post("http://localhost:8000/users/register", datos);
        }
        console.log(res.data);
        if (res.status === 200) {
          onClose();
        } else if (res.status === 201) {
          setError('');
          setSuccess(res.data.message);
          setTimeout(() => {
            setSuccess('');
            onClose();
          }, 2000);
        }
      } catch (error) {
        console.error(error);
        if (error.response && error.response.data && error.response.data.message) {
          setError(error.response.data.message);
        } else {
          setError('Error en el inicio de sesión o registro. Por favor, intenta de nuevo.');
        }
      }
    }
  };
if (!isOpen) {
    return null;
  }
  return (
    <div className="registro">
      <div className="registro-content">
        <div className="registration">
          <h2 className="registration">{isLogin ? 'Inicio de sesión' : 'Registro'}</h2>
          <button className="registration-x" onClick={onClose}>
            ❌
          </button>
        </div>
        <form onSubmit={(e) => handleSubmit(e)} className="registros">
          <label>
            Usuario:
            <input
              type="text"
              name="username"
              value={datos.username}
              onChange={handleInputChange}
              required
            />
          </label>
          <label>
            Contraseña:
            <input
              type="password"
              name="password"
              value={datos.password}
              onChange={handleInputChange}
              required
            />
          </label>
          {!isLogin && (
            <label>
              Correo electrónico:
              <input
                type="email"
                name="email"
                value={datos.email}
                onChange={handleInputChange}
                required
              />
            </label>
          )}
          <button className="register" type="submit">
            {isLogin ? 'Iniciar sesión' : 'Registrarme'}
          </button>
          {error && <p className="error-message">{error}</p>}
          {success && <p className="success-message">{success}</p>}
        </form>
        <p>
          {isLogin ? '¿No tienes una cuenta?' : '¿Ya tienes una cuenta?'}{' '}
          <button className="login-register" onClick={() => setIsLogin(!isLogin)}>
            {isLogin ? 'Regístrate' : 'Inicia sesión'}
          </button>
        </p>
      </div>
    </div>
  );
};
export default Registro;